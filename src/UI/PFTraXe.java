/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import DAO.TraXeDAO;
import DTO.NhapXeDTO;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.Timer;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Admin
 */
public class PFTraXe extends javax.swing.JPanel {
    private String ma="";

    /**
     * Creates new form PFGiveCarBack
     */
    private Timer timer;
    public PFTraXe(String maNV) {
        initComponents();
        setSize(1040, 545);
        //showTable();
        loadTable();
        autoDate();
        autoTime();
        ma=maNV;
        txtBienSo.setEnabled(false);
        txtPhi.setEnabled(false);
        txtNgayNhan.setEnabled(false);
        txtGioNhan.setEnabled(false);
        btnInHoaDon.setEnabled(false);
    }



    public void loadTable() {
        ArrayList<NhapXeDTO> list = TraXeDAO.veXe();
        DefaultTableModel tblModel = (DefaultTableModel) TableTTXe.getModel();
        Object[] row = new Object[7];
        for (int i = 0; i < list.size(); i++) {
            row[0] = list.get(i).getMaVe();
            row[1] = list.get(i).getBienSo();
            row[2] = list.get(i).getLoaiXe();
            row[3] = list.get(i).getViTri();
            row[4] = list.get(i).getNgayGui();
            row[5] = list.get(i).getGioGui();
            row[6] = list.get(i).getID_phi();
            tblModel.addRow(row);
        }
        TableTTXe.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (TableTTXe.getSelectedRow() >= 0) {
                    //txtLoaiXe.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 0) + "");
                    txtBienSo.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 1) + "");
                    //txtMauXe.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 2) + "");
                    txtMaVe.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 0) + "");
                    txtPhi.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 6) + "");
                    //txtViTri.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 3) + "");
                    //txtNgayNhan.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 4) + "");
                    //txtGioNhan.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 5) + "");
                }
            }
        });
    }

    public void search(String str) {
        DefaultTableModel tblModel;
        tblModel = (DefaultTableModel) TableTTXe.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(tblModel);
        TableTTXe.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(str));
    }
    
     private void autoDate() {
        Date d = new Date();
        SimpleDateFormat s = new SimpleDateFormat("yyyy-MM-dd");
        txtNgayNhan.setText(s.format(d));
    }
     
    
    private void autoTime() {
        timer =new Timer(0, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Date d = new Date();
                SimpleDateFormat s = new SimpleDateFormat("HH:mm:ss");
                txtGioNhan.setText(s.format(d));
            }
        });
        timer.start();
    }

    public String loaive(){
        String x=(String)cbxLoaive.getSelectedItem();
        if (x.equals("Thẻ Tháng")) return "Ve Thang";
        else return "Ve Luot";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TableTTXe = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JTextField();
        cbxTimKiem = new javax.swing.JComboBox<>();
        btnTimKiem = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnInHoaDon = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        btnLamMoi = new javax.swing.JButton();
        txtBienSo = new javax.swing.JTextField();
        txtMaVe = new javax.swing.JTextField();
        txtNgayNhan = new javax.swing.JTextField();
        txtGioNhan = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        cbxLoaive = new javax.swing.JComboBox<>();
        btnXacNhan = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtPhi = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 204, 255));

        TableTTXe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã vé", "Biển Số Xe", "Loại xe", "Vị Trí", "Ngày Nhận", "Giờ Nhận", "ID_Phí"
            }
        ));
        jScrollPane1.setViewportView(TableTTXe);
        if (TableTTXe.getColumnModel().getColumnCount() > 0) {
            TableTTXe.getColumnModel().getColumn(0).setPreferredWidth(100);
            TableTTXe.getColumnModel().getColumn(0).setMaxWidth(100);
            TableTTXe.getColumnModel().getColumn(1).setPreferredWidth(150);
            TableTTXe.getColumnModel().getColumn(1).setMaxWidth(150);
            TableTTXe.getColumnModel().getColumn(2).setPreferredWidth(100);
            TableTTXe.getColumnModel().getColumn(2).setMaxWidth(100);
            TableTTXe.getColumnModel().getColumn(3).setPreferredWidth(80);
            TableTTXe.getColumnModel().getColumn(3).setMaxWidth(80);
        }

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Tìm Kiếm Thông Tin :");

        txtTimKiem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTimKiem.setName("txtTimKiem"); // NOI18N
        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });
        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyPressed(evt);
            }
        });

        cbxTimKiem.setBackground(new java.awt.Color(102, 102, 255));
        cbxTimKiem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbxTimKiem.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Theo biển số", "Theo mã vé" }));
        cbxTimKiem.setBorder(null);
        cbxTimKiem.setFocusable(false);
        cbxTimKiem.setName("cbxTImKiemItem"); // NOI18N
        cbxTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTimKiemActionPerformed(evt);
            }
        });

        btnTimKiem.setBackground(new java.awt.Color(102, 102, 255));
        btnTimKiem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnTimKiem.setText("Tìm Kiếm");
        btnTimKiem.setBorder(null);
        btnTimKiem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTimKiem.setFocusPainted(false);
        btnTimKiem.setName("btnTimKiem"); // NOI18N
        btnTimKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnTimKiemMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnTimKiemMouseExited(evt);
            }
        });
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Biển Số Xe :");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setText("Mã Vé :");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel8.setText("Ngày Trả :");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setText("Giờ Trả :");

        btnInHoaDon.setBackground(new java.awt.Color(102, 102, 255));
        btnInHoaDon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnInHoaDon.setText("In Hóa Đơn");
        btnInHoaDon.setBorder(null);
        btnInHoaDon.setBorderPainted(false);
        btnInHoaDon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnInHoaDon.setFocusPainted(false);
        btnInHoaDon.setName("btnInHoaDon"); // NOI18N
        btnInHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnInHoaDonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnInHoaDonMouseExited(evt);
            }
        });
        btnInHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInHoaDonActionPerformed(evt);
            }
        });

        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnLamMoi.setBackground(new java.awt.Color(102, 102, 255));
        btnLamMoi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnLamMoi.setText("Làm Mới");
        btnLamMoi.setBorder(null);
        btnLamMoi.setBorderPainted(false);
        btnLamMoi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLamMoi.setFocusPainted(false);
        btnLamMoi.setName("btnLamMoi"); // NOI18N
        btnLamMoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnLamMoiMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnLamMoiMouseExited(evt);
            }
        });
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        txtBienSo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtBienSo.setName("txtBienSo"); // NOI18N

        txtMaVe.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtMaVe.setName("txtMaVe"); // NOI18N
        txtMaVe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaVeActionPerformed(evt);
            }
        });

        txtNgayNhan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtNgayNhan.setName("txtNgayNhan"); // NOI18N
        txtNgayNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNgayNhanActionPerformed(evt);
            }
        });

        txtGioNhan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtGioNhan.setName("txtGioNhan"); // NOI18N
        txtGioNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGioNhanActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel10.setText("Trả Xe");

        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Loại Thẻ : ");

        cbxLoaive.setBackground(new java.awt.Color(102, 102, 255));
        cbxLoaive.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbxLoaive.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Thẻ Lượt", "Thẻ Tháng" }));
        cbxLoaive.setBorder(null);
        cbxLoaive.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cbxLoaive.setFocusable(false);
        cbxLoaive.setName("cbxLoaive"); // NOI18N
        cbxLoaive.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxLoaiveItemStateChanged(evt);
            }
        });

        btnXacNhan.setBackground(new java.awt.Color(102, 102, 255));
        btnXacNhan.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnXacNhan.setText("Xác Nhận");
        btnXacNhan.setBorder(null);
        btnXacNhan.setBorderPainted(false);
        btnXacNhan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnXacNhan.setName("btnXacNhan"); // NOI18N
        btnXacNhan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnXacNhanMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnXacNhanMouseExited(evt);
            }
        });
        btnXacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel6.setText("ID_Phí:");

        txtPhi.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtPhi.setName("txtBienSo"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(74, 74, 74)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel10)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPhi, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtBienSo, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(106, 106, 106)
                                        .addComponent(jLabel9))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(130, 130, 130)
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbxLoaive, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtMaVe, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(106, 106, 106)
                                        .addComponent(jLabel8))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbxTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNgayNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtGioNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addComponent(btnXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnInHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 739, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(8, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(4, 4, 4)
                                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(cbxLoaive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtMaVe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNgayNhan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtBienSo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(txtGioNhan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnXacNhan, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(txtPhi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addComponent(btnInHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(btnLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                .addGap(14, 14, 14))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimKiemActionPerformed

    private void cbxTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxTimKiemActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        DefaultTableModel tblModel = (DefaultTableModel) TableTTXe.getModel();
        Object[] row = new Object[7];
        if (cbxTimKiem.getSelectedItem().toString().equals("Theo biển số")) {
            for (int i = tblModel.getRowCount() - 1; i >= 0; i--) {
                tblModel.removeRow(i);
            }
            TraXeDAO tx = new TraXeDAO();
            NhapXeDTO nx = tx.findXebyBienso(txtTimKiem.getText());
            if (nx != null) {
                for (int i = 0; i < 1; i++) {
                    row[0] = nx.getMaVe();
                    row[1] = nx.getBienSo();
                    row[2] = nx.getLoaiXe();
                    row[3] = nx.getViTri();
                    row[4] = nx.getNgayGui();
                    row[5] = nx.getGioGui();
                    row[6] = nx.getID_phi();
                    tblModel.addRow(row);
                }
                TableTTXe.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                    @Override
                    public void valueChanged(ListSelectionEvent e) {
                        if (TableTTXe.getSelectedRow() >= 0) {
                            //txtLoaiXe.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 0) + "");
                            txtBienSo.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 1) + "");
                            //txtMauXe.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 2) + "");
                            txtMaVe.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 0) + "");
                            
                            txtPhi.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 6) + "");
                            //txtNgayNhan.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 4) + "");
                            //stopAutoTime();
                            //txtGioNhan.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 5) + "");
                        }
                    }
                });
            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy xe có biển số " + txtTimKiem.getText() + " \nVui lòng nhập lại biển số");
                loadTable();
                txtTimKiem.setText("");
            }
        } else {
            for (int i = tblModel.getRowCount() - 1; i >= 0; i--) {
                tblModel.removeRow(i);
            }
            TraXeDAO tx = new TraXeDAO();
            NhapXeDTO nx = tx.findXebyMave(txtTimKiem.getText());
            if (nx != null) {
                for (int i = 0; i < 1; i++) {
                    row[0] = nx.getLoaiXe();
                    row[1] = nx.getBienSo();
                    //row[2] = nx.getMauXe();
                    row[2] = nx.getMaVe();
                    //row[4] = nx.getKhuVuc();
                    row[3] = nx.getViTri();
                    row[4] = nx.getNgayGui();
                    row[5] = nx.getGioGui();
                    row[6] = nx.getID_phi();
                    tblModel.addRow(row);
                }
                TableTTXe.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                    @Override
                    public void valueChanged(ListSelectionEvent e) {
                        if (TableTTXe.getSelectedRow() >= 0) {
                            //txtLoaiXe.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 0) + "");
                            txtBienSo.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 1) + "");
                            //txtMauXe.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 2) + "");
                            txtMaVe.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 0) + "");
                            txtPhi.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 6) + "");
                            //txtViTri.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 3) + "");
                            //txtNgayNhan.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 4) + "");
                            //stopAutoTime();
                            //txtGioNhan.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 5) + "");
                        }
                    }
                });
            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy vé xe " + txtTimKiem.getText() + " \nVui lòng nhập mã vé");
                loadTable();
                txtTimKiem.setText("");
            }
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void txtMaVeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaVeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaVeActionPerformed

    private void txtNgayNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNgayNhanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNgayNhanActionPerformed

    private void txtGioNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGioNhanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGioNhanActionPerformed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
//         TODO add your handling code here:
        ArrayList<NhapXeDTO> list = TraXeDAO.veXe();
        DefaultTableModel tblModel = (DefaultTableModel) TableTTXe.getModel();
        Object[] row = new Object[7];
        for (int i = tblModel.getRowCount() - 1; i >= 0; i--) {
            tblModel.removeRow(i);
        }
        txtBienSo.setText("");
        txtMaVe.setText("");
        txtPhi.setText("");
        cbxLoaive.setSelectedItem("Thẻ Lượt");
        btnInHoaDon.setEnabled(false);
        //stopAutoTime();
        //txtGioNhan.setText("");
        //txtNgayNhan.setText("");
        loadTable();
    }//GEN-LAST:event_btnLamMoiActionPerformed
    private void cbxTimKiemItemStateChanged(java.awt.event.ItemEvent evt) {
        // TODO add your handling code here:
        cbxTimKiem = (JComboBox<String>) evt.getSource();
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (cbxTimKiem.getSelectedItem().equals("Theo biển số")) {

            }
        }
    }
    private void btnInHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInHoaDonActionPerformed
//       new FHoaDon().setVisible(true);
        String vexe = txtMaVe.getText();
        vexe = vexe.replaceAll("\\s+$", "");
        int ID_phi=Integer.parseInt(txtPhi.getText());
        LocalDate ngayRa= LocalDate.parse(txtNgayNhan.getText());
        String gioRa=txtGioNhan.getText();
        if (vexe.equals(""))
        {
             JOptionPane.showMessageDialog(this, "Vui lòng nhập mã vé");
        }
        else{
            FHoaDon hd = new FHoaDon(vexe, ID_phi,ngayRa,gioRa, ma);
            hd.setVisible(true);
        }
    }//GEN-LAST:event_btnInHoaDonActionPerformed

    private void txtTimKiemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyPressed
        // TODO add your handling code here:
//        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
//            DefaultTableModel tblModel = (DefaultTableModel) TableTTXe.getModel();
//            Object[] row = new Object[6];
//            if (cbxTimKiem.getSelectedItem().toString().equals("Theo biển số")) {
//                for (int i = tblModel.getRowCount() - 1; i >= 0; i--) {
//                    tblModel.removeRow(i);
//                }
//                TraXeDAO tx = new TraXeDAO();
//                NhapXeDTO nx = tx.findXebyBienso(txtTimKiem.getText());
//                if (nx != null) {
//                    for (int i = 0; i < 1; i++) {
//                        row[0] = nx.getLoaiXe();
//                        row[1] = nx.getBienSo();
//                        //row[2] = nx.getMauXe();
//                        row[2] = nx.getMaVe();
//                        //row[4] = nx.getKhuVuc();
//                        row[3] = nx.getViTri();
//                        row[4] = nx.getNgayGui();
//                        row[5] = nx.getGioGui();
//                        tblModel.addRow(row);
//                    }
//                    TableTTXe.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
//                        @Override
//                        public void valueChanged(ListSelectionEvent e) {
//                            if (TableTTXe.getSelectedRow() >= 0) {
//                                txtLoaiXe.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 0) + "");
//                                txtBienSo.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 1) + "");
//                                //txtMauXe.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 2) + "");
//                                txtMaVe.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 2) + "");
//                                //txtKhuVuc.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 4) + "");
//                                txtViTri.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 3) + "");
//                                txtNgayNhan.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 4) + "");
//                                txtGioNhan.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 5) + "");
//                            }
//                        }
//                    });
//                } else {
//                    JOptionPane.showMessageDialog(this, "Không tìm thấy xe có biển số " + txtTimKiem.getText() + " \nVui lòng nhập lại biển số");
//                    loadTabel();
//                    txtTimKiem.setText("");
//                }
//            } else {
//                for (int i = tblModel.getRowCount() - 1; i >= 0; i--) {
//                    tblModel.removeRow(i);
//                }
//                TraXeDAO tx = new TraXeDAO();
//                NhapXeDTO nx = tx.findXebyMave(txtTimKiem.getText());
//                if (nx != null) {
//                    for (int i = 0; i < 1; i++) {
//                        row[0] = nx.getLoaiXe();
//                        row[1] = nx.getBienSo();
//                        //row[2] = nx.getMauXe();
//                        row[2] = nx.getMaVe();
//                        //row[4] = nx.getKhuVuc();
//                        row[3] = nx.getViTri();
//                        row[4] = nx.getNgayGui();
//                        row[5] = nx.getGioGui();
//                        tblModel.addRow(row);
//                    }
//                    TableTTXe.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
//                        @Override
//                        public void valueChanged(ListSelectionEvent e) {
//                            if (TableTTXe.getSelectedRow() >= 0) {
//                                txtLoaiXe.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 0) + "");
//                                txtBienSo.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 1) + "");
//                                //txtMauXe.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 2) + "");
//                                txtMaVe.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 2) + "");
//                                //txtKhuVuc.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 4) + "");
//                                txtViTri.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 3) + "");
//                                txtNgayNhan.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 4) + "");
//                                txtGioNhan.setText(TableTTXe.getValueAt(TableTTXe.getSelectedRow(), 5) + "");
//                            }
//                        }
//                    });
//                } else {
//                    JOptionPane.showMessageDialog(this, "Không tìm thấy vé xe " + txtTimKiem.getText() + " \nVui lòng nhập mã vé");
//                    loadTabel();
//                    txtTimKiem.setText("");
//                }
//            }
//        }
    }//GEN-LAST:event_txtTimKiemKeyPressed

    private void cbxLoaiveItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxLoaiveItemStateChanged
        // TODO add your handling code here:
        cbxLoaive = (JComboBox<String>) evt.getSource();
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            String loaive = (String)cbxLoaive.getSelectedItem();
            //String khuvuc = cbxKhuVuc.getSelectedItem().toString();
            if (loaive.equals("Thẻ Lượt")==true) {
                txtMaVe.setText("");
                jLabel8.setText("Ngày Trả:");
                jLabel9.setText("Giờ Trả:");
                //txtNgayNhan.setText("");
                txtGioNhan.setText("");
                btnInHoaDon.setEnabled(false);
              
            } else if (loaive.equals("Thẻ Tháng")) {
                txtMaVe.setText("");
                btnInHoaDon.setEnabled(false);
                jLabel8.setText("Ngày Ra/Vào:");
                jLabel9.setText("Giờ Ra/Vào:");
               
            }
        }
    }//GEN-LAST:event_cbxLoaiveItemStateChanged

    private void btnXacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanActionPerformed
        try
        {
            if (cbxLoaive.getSelectedItem().equals("Thẻ Lượt"))
            {
                if (txtMaVe.getText().equals(""))
                {
                    JOptionPane.showMessageDialog(this, "Vui lòng nhập mã vé");
                }
                else
                {
                    String loaive = cbxLoaive.getSelectedItem().toString();
                    String ma=txtMaVe.getText();
                    //String khuvuc = cbxKhuVuc.getSelectedItem().toString();
//                    String loaixe = cbxLoaiXe.getSelectedItem().toString();
                    TraXeDAO nx = new TraXeDAO();
                    NhapXeDTO checkVe = nx.checkMaVe(ma);
                    if (checkVe==null)
                    {
                        JOptionPane.showMessageDialog(this, "Mã thẻ không hợp lệ!");
                        txtMaVe.setText("");
                    }
                    else
                    {
                        txtBienSo.setText(checkVe.getBienSo());
                        txtPhi.setText(String.valueOf(checkVe.getID_phi()));
                        //txtNgayNhan.setText(checkVe.getNgayGui());
                        //txtGioNhan.setText(checkVe.getGioGui());
                        JOptionPane.showMessageDialog(this, "Thẻ hợp lệ.");
                        btnInHoaDon.setEnabled(true);
                        //LocalDate ngayRa= LocalDate.parse(txtNgayNhan.getText());
                        //String gioRa=txtGioNhan.getText();
                        //nx.EXIT_TL(gioRa, ngayRa, ma);
                        //loadTable();
                    }
                }
            }      
            else
            {
                TraXeDAO nx = new TraXeDAO();
                String maThe=(String)txtMaVe.getText();
                LocalDate ngayRa= LocalDate.parse(txtNgayNhan.getText());
                String gioRa=txtGioNhan.getText();
                if (nx.checkTheThang(maThe,ngayRa)==false)
                {
                    JOptionPane.showMessageDialog(this, "Thẻ không hợp lệ!");
                }
                else
                {
                    if (nx.themLichSu(gioRa, ngayRa, maThe)==0){
                        JOptionPane.showMessageDialog(this, "Xe hiện không có trong bãi!");
                    }
                    else
                        JOptionPane.showMessageDialog(this, "Thẻ xe hợp lệ");
                }

            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnXacNhanActionPerformed

    private void btnXacNhanMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXacNhanMouseEntered
        // TODO add your handling code here:
        btnXacNhan.setFont(new Font(btnXacNhan.getFont().getName(), Font.BOLD, btnXacNhan.getFont().getSize()));
        btnXacNhan.setForeground(Color.WHITE);
    }//GEN-LAST:event_btnXacNhanMouseEntered

    private void btnXacNhanMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnXacNhanMouseExited
        // TODO add your handling code here:
        btnXacNhan.setFont(new Font(btnXacNhan.getFont().getName(), Font.PLAIN, btnXacNhan.getFont().getSize()));
        btnXacNhan.setForeground(Color.BLACK);
    }//GEN-LAST:event_btnXacNhanMouseExited

    private void btnTimKiemMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTimKiemMouseEntered
        // TODO add your handling code here:
        btnTimKiem.setFont(new Font(btnTimKiem.getFont().getName(), Font.BOLD, btnTimKiem.getFont().getSize()));
        btnTimKiem.setForeground(Color.WHITE);
    }//GEN-LAST:event_btnTimKiemMouseEntered

    private void btnTimKiemMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTimKiemMouseExited
        // TODO add your handling code here:
        btnTimKiem.setFont(new Font(btnTimKiem.getFont().getName(), Font.PLAIN, btnTimKiem.getFont().getSize()));
        btnTimKiem.setForeground(Color.BLACK);
    }//GEN-LAST:event_btnTimKiemMouseExited

    private void btnInHoaDonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInHoaDonMouseEntered
        // TODO add your handling code here:
        btnInHoaDon.setFont(new Font(btnInHoaDon.getFont().getName(), Font.BOLD, btnInHoaDon.getFont().getSize()));
        btnInHoaDon.setForeground(Color.WHITE);
    }//GEN-LAST:event_btnInHoaDonMouseEntered

    private void btnInHoaDonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInHoaDonMouseExited
        // TODO add your handling code here:
        btnInHoaDon.setFont(new Font(btnInHoaDon.getFont().getName(), Font.PLAIN, btnInHoaDon.getFont().getSize()));
        btnInHoaDon.setForeground(Color.BLACK);
    }//GEN-LAST:event_btnInHoaDonMouseExited

    private void btnLamMoiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLamMoiMouseEntered
        // TODO add your handling code here:
        btnLamMoi.setFont(new Font(btnLamMoi.getFont().getName(), Font.BOLD, btnLamMoi.getFont().getSize()));
        btnLamMoi.setForeground(Color.WHITE);
    }//GEN-LAST:event_btnLamMoiMouseEntered

    private void btnLamMoiMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLamMoiMouseExited
        // TODO add your handling code here:
        btnLamMoi.setFont(new Font(btnLamMoi.getFont().getName(), Font.PLAIN, btnLamMoi.getFont().getSize()));
        btnLamMoi.setForeground(Color.BLACK);
    }//GEN-LAST:event_btnLamMoiMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableTTXe;
    private javax.swing.JButton btnInHoaDon;
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXacNhan;
    private javax.swing.JComboBox<String> cbxLoaive;
    private javax.swing.JComboBox<String> cbxTimKiem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField txtBienSo;
    private javax.swing.JTextField txtGioNhan;
    private javax.swing.JTextField txtMaVe;
    private javax.swing.JTextField txtNgayNhan;
    private javax.swing.JTextField txtPhi;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
